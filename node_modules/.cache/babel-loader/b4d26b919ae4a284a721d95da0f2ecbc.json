{"ast":null,"code":"import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport store from \"../store/store\";\nexport const register = async (email, password, setHint) => {\n  try {\n    const response = await createUserWithEmailAndPassword(auth, email, password);\n    store.setIsModal(false);\n    store.setCurrentModal(\"AddPhotoForm\");\n  } catch (error) {\n    setHint(\"Некорректный email/пароль\");\n  }\n};\nexport const login = async (email, password, setHint, clearEmail, clearPassword) => {\n  try {\n    const response = await signInWithEmailAndPassword(auth, email, password);\n    clearEmail();\n    clearPassword();\n    store.setIsModal(false);\n    store.setCurrentModal(\"AddPhotoForm\");\n  } catch (error) {\n    setHint(\"Неверный email/пароль\");\n  }\n};","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","auth","store","register","email","password","setHint","response","setIsModal","setCurrentModal","error","login","clearEmail","clearPassword"],"sources":["/Users/user/Documents/Новая папка/minipint/src/auth/index.ts"],"sourcesContent":["import {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport store from \"../store/store\";\n\nexport const register = async (\n  email: string,\n  password: string,\n  setHint: (arg: string) => void\n) => {\n  try {\n    const response = await createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    store.setIsModal(false);\n    store.setCurrentModal(\"AddPhotoForm\");\n  } catch (error) {\n    setHint(\"Некорректный email/пароль\");\n  }\n};\n\nexport const login = async (\n  email: string,\n  password: string,\n  setHint: (arg: string) => void,\n  clearEmail: () => void,\n  clearPassword: () => void\n) => {\n  try {\n    const response = await signInWithEmailAndPassword(auth, email, password);\n    clearEmail();\n    clearPassword();\n    store.setIsModal(false);\n    store.setCurrentModal(\"AddPhotoForm\");\n  } catch (error) {\n    setHint(\"Неверный email/пароль\");\n  }\n};\n"],"mappings":"AAAA,SACEA,8BADF,EAEEC,0BAFF,QAGO,eAHP;AAIA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,OACtBC,KADsB,EAEtBC,QAFsB,EAGtBC,OAHsB,KAInB;EACH,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,8BAA8B,CACnDE,IADmD,EAEnDG,KAFmD,EAGnDC,QAHmD,CAArD;IAKAH,KAAK,CAACM,UAAN,CAAiB,KAAjB;IACAN,KAAK,CAACO,eAAN,CAAsB,cAAtB;EACD,CARD,CAQE,OAAOC,KAAP,EAAc;IACdJ,OAAO,CAAC,2BAAD,CAAP;EACD;AACF,CAhBM;AAkBP,OAAO,MAAMK,KAAK,GAAG,OACnBP,KADmB,EAEnBC,QAFmB,EAGnBC,OAHmB,EAInBM,UAJmB,EAKnBC,aALmB,KAMhB;EACH,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMP,0BAA0B,CAACC,IAAD,EAAOG,KAAP,EAAcC,QAAd,CAAjD;IACAO,UAAU;IACVC,aAAa;IACbX,KAAK,CAACM,UAAN,CAAiB,KAAjB;IACAN,KAAK,CAACO,eAAN,CAAsB,cAAtB;EACD,CAND,CAME,OAAOC,KAAP,EAAc;IACdJ,OAAO,CAAC,uBAAD,CAAP;EACD;AACF,CAhBM"},"metadata":{},"sourceType":"module"}